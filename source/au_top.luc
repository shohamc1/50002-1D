module au_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,           // USB->Serial output
    input a,
    input b,
    input c,
    input d,
    input reset,
    output current,
    output target,
    output a_display,
    output b_display,
    output c_display,
    output d_display
    
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  button_handler button_handler;
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    led = 8h00;             // turn LEDs off

    usb_tx = usb_rx;        // echo the serial data
    
    button_handler.n1_sig = a;
    button_handler.n2_sig = b;
    button_handler.n3_sig = c;
    button_handler.n4_sig = d; 
    button_handler.reset = reset;
    led[0] = button_handler.error;
    
    
       
  }
}